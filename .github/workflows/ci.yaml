name: CI

on:
  pull_request:
    branches: [main]

  push:
    branches: [main]

  workflow_dispatch:
permissions:
  contents: write
jobs:
  run-test:
    name: 'Run tests'
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        node-version: [18.x]

    steps:
      - name: Git clone
        uses: actions/checkout@v4

      - name: Check for duplicated file names
        run: |
          git ls-files --exclude-standard --others --cached --no-empty-directory | sort -f > files.txt
          uniq -di files.txt > duplicates.txt
          if [[ -s duplicates.txt ]]; then
            echo "Found files with the same name:"
            cat duplicates.txt
            exit 1
          fi

      - name: Install JDK
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Npm install
        run: npm ci

      - name: Static analysis
        run: npm run format && npm run lint

      - name: Prepare Jenkins data
        run: |
          cat ${{ github.workspace }}/jenkins_data/jenkins_home.tar.0* > ${{ github.workspace }}/jenkins_backup.tar
          md5sum ${{ github.workspace }}/jenkins_backup.tar

      - name: Extract Jenkins data and set permission
        run: |
          tar -xvf ./jenkins_backup.tar
          chmod -R 777 ./jenkins_home

      - name: Docker login
        run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login --username ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Docker start
        run: docker run --rm --detach -p 8081:8080 -p 50000:50000 -v ${{ github.workspace }}/jenkins_home:/var/jenkins_home jenkins/jenkins:2.462.3-lts-jdk17

      - name: Wait for the Jenkins
        run: chmod +x ./.github/wait-for-jenkins.sh

      - name: Write the cypress.env.json
        run: |
          echo '${{ secrets.CYPRESS_LOGIN_CREDENTIALS }}' > ./cypress.env.json

      - name: Run Cypress tests
        run: npx cypress run --headless || npm run report

      - name: Create test summary
        uses: test-summary/action@v2.4
        if: always()
        with:
          paths: reports/*.xml

      - name: Publish test results
        uses: EnricoMi/publish-unit-test-result-action@v1
        if: always()
        with:
          files: 'reports/*.xml'

      - name: Artifacts screenshots
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: cypress-screenshots
          path: ./cypress/screenshots
      - name: Artifacts report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: allure report
          path: ./allure-report
      - name: Deploy report to Github Pages
        if: always()
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./allure-report
